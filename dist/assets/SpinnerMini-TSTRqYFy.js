import{D as p,E as d,F as a,G as b,H as u,d as m,r as n,I as f,J as v,j as h}from"./index-CxhnL_yD.js";var y=class extends p{#s;#i=void 0;#t;#e;constructor(t,s){super(),this.#s=t,this.setOptions(s),this.bindMethods(),this.#r()}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(t){const s=this.options;this.options=this.#s.defaultMutationOptions(t),d(this.options,s)||this.#s.getMutationCache().notify({type:"observerOptionsUpdated",mutation:this.#t,observer:this}),s?.mutationKey&&this.options.mutationKey&&a(s.mutationKey)!==a(this.options.mutationKey)?this.reset():this.#t?.state.status==="pending"&&this.#t.setOptions(this.options)}onUnsubscribe(){this.hasListeners()||this.#t?.removeObserver(this)}onMutationUpdate(t){this.#r(),this.#n(t)}getCurrentResult(){return this.#i}reset(){this.#t?.removeObserver(this),this.#t=void 0,this.#r(),this.#n()}mutate(t,s){return this.#e=s,this.#t?.removeObserver(this),this.#t=this.#s.getMutationCache().build(this.#s,this.options),this.#t.addObserver(this),this.#t.execute(t)}#r(){const t=this.#t?.state??b();this.#i={...t,isPending:t.status==="pending",isSuccess:t.status==="success",isError:t.status==="error",isIdle:t.status==="idle",mutate:this.mutate,reset:this.reset}}#n(t){u.batch(()=>{if(this.#e&&this.hasListeners()){const s=this.#i.variables,i=this.#i.context,e={client:this.#s,meta:this.options.meta,mutationKey:this.options.mutationKey};t?.type==="success"?(this.#e.onSuccess?.(t.data,s,i,e),this.#e.onSettled?.(t.data,null,s,i,e)):t?.type==="error"&&(this.#e.onError?.(t.error,s,i,e),this.#e.onSettled?.(void 0,t.error,s,i,e))}this.listeners.forEach(s=>{s(this.#i)})})}};function M(t,s){const i=m(),[e]=n.useState(()=>new y(i,t));n.useEffect(()=>{e.setOptions(t)},[e,t]);const r=n.useSyncExternalStore(n.useCallback(o=>e.subscribe(u.batchCalls(o)),[e]),()=>e.getCurrentResult(),()=>e.getCurrentResult()),c=n.useCallback((o,l)=>{e.mutate(o,l).catch(f)},[e]);if(r.error&&v(e.options.throwOnError,[r.error]))throw r.error;return{...r,mutate:c,mutateAsync:r.mutate}}function x(){return h.jsx("div",{className:"flex justify-center",children:h.jsx("div",{className:"spinnerMini"})})}export{x as S,M as u};
